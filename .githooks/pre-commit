#!/usr/bin/env bash
set -euo pipefail

# Normalize to repo root (git runs hooks at repo root, but be explicit)
REPO_ROOT="$(git rev-parse --show-toplevel 2>/dev/null || pwd)"
cd "$REPO_ROOT"

# Format C# code before commit.
# - Uses local dotnet tool CSharpier (printWidth=86)
# - Only runs if there are changes under the `csharp/` directory

has_csharp_changes() {
  while IFS= read -r line; do
    [[ -z "$line" ]] && continue
    local path="${line:3}"
    if [[ "$path" == *" -> "* ]]; then
      path="${path##* -> }"
    fi
    [[ "$path" == csharp/* ]] && return 0
  done < <(git status --porcelain)
  return 1
}

if has_csharp_changes; then
  if ! command -v dotnet >/dev/null 2>&1; then
    echo "[pre-commit] dotnet is not installed; skipping CSharpier." >&2
  else
    # Keep CLI noise low but use global caches (unified policy)
    export DOTNET_CLI_TELEMETRY_OPTOUT=1
    export DOTNET_NOLOGO=1

    # Restore local tools quietly (CSharpier). If offline or feed issue, continue.
    TOOL_MANIFEST="csharp/.config/dotnet-tools.json"
    if [[ -f "$TOOL_MANIFEST" ]]; then
      DOTNET_CLI_TELEMETRY_OPTOUT=1 dotnet tool restore \
        --tool-manifest "$TOOL_MANIFEST" \
        >/dev/null 2>&1 || true
    fi

    echo "[pre-commit] C# changes detected; running CSharpier in csharp/ ..."
    # Prefer local tool manifest: run from csharp/ so it picks local config.
    if ( cd csharp && dotnet tool run dotnet-csharpier --version >/dev/null 2>&1 ); then
      ( cd csharp && dotnet tool run dotnet-csharpier . ) || true
    elif ( cd csharp && dotnet tool run csharpier --version >/dev/null 2>&1 ); then
      ( cd csharp && dotnet tool run csharpier . ) || true
    else
      # Global tool fallback (runs from csharp/ to pick local config)
      if command -v dotnet-csharpier >/dev/null 2>&1; then
        ( cd csharp && dotnet-csharpier . ) || true
      else
        echo "[pre-commit] CSharpier not available (local restore/global tool). Skipping." >&2
      fi
    fi
  fi
else
  echo "[pre-commit] No changes under csharp/; skipping CSharpier."
fi

# Stage any changes produced by the formatter for tracked files only.
git add -u

exit 0
