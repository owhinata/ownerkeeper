#!/usr/bin/env bash
set -euo pipefail

# Format C# code before commit.
# - Uses local dotnet tool CSharpier (printWidth=86)
# - Uses dotnet format as a secondary pass

if ! command -v dotnet >/dev/null 2>&1; then
  echo "[pre-commit] dotnet is not installed; skipping formatting." >&2
  exit 0
fi

# Restore local tools quietly (CSharpier). If offline, continue without failing.
dotnet tool restore >/dev/null 2>&1 || true

echo "[pre-commit] Running CSharpier..."
dotnet csharpier format . || true

collect_changed_projects() {
  local has_ownerkeeper=0
  local has_tests=0
  while IFS= read -r line; do
    [[ -z "$line" ]] && continue
    local path="${line:3}"
    if [[ "$path" == *" -> "* ]]; then
      path="${path##* -> }"
    fi

    case "$path" in
      csharp/OwnerKeeper/*|csharp/OwnerKeeper.csproj|csharp/OwnerKeeper/*.csproj|csharp/OwnerKeeper/*.cs)
        has_ownerkeeper=1
        ;;
      csharp/OwnerKeeper.Tests/*|csharp/OwnerKeeper.Tests.csproj|csharp/OwnerKeeper.Tests/*.csproj|csharp/OwnerKeeper.Tests/*.cs)
        has_tests=1
        ;;
      csharp/Directory.Build.props|csharp/Directory.Build.targets)
        has_ownerkeeper=1
        has_tests=1
        ;;
    esac
  done < <(git status --porcelain)

  local projects=()
  (( has_ownerkeeper )) && projects+=("csharp/OwnerKeeper/OwnerKeeper.csproj")
  (( has_tests )) && projects+=("csharp/OwnerKeeper.Tests/OwnerKeeper.Tests.csproj")

  if (( ${#projects[@]} > 0 )); then
    printf '%s\n' "${projects[@]}"
  fi
}

projects_to_format=()
while IFS= read -r project; do
  [[ -z "$project" ]] && continue
  projects_to_format+=("$project")
done < <(collect_changed_projects)

if (( ${#projects_to_format[@]} > 0 )); then
  echo "[pre-commit] Running dotnet format on: ${projects_to_format[*]}"
  for project in "${projects_to_format[@]}"; do
    dotnet format "$project" -v minimal || true
  done
else
  echo "[pre-commit] No C# project changes detected; skipping dotnet format."
fi

# Stage any changes produced by the formatters.
git add -A

exit 0
